#summary How to use the android.smartcard library in Android
#labels android,smartcard,seek

= !!! Temporarily unavailable !!! =

There are problems with the kernel driver for the Secure SD card.
We are working on potential solutions.
Thanks for your patience.
We will post a message on seek-for-android and android-security-discuss when we have news.

= Introduction =

The Android smartcard library is a proposal for an implementation of a library that will enable Android applications to connect a Secure Element, e.g. USIM card or Mobile Security Card.<br/><br/>
The interface of the library should be considered as stable and independent of the underlying transport mechanism; either PC/SC or NativeMcEX.
Currently, the PC/SC is the best choice as it is better supported and tested. Over the time, we plan to remove PC/SC support and aim for the native McEX handler (see [http://code.google.com/p/seek-for-android/wiki/PCSCvsNativeMcEX PCSCvsNativeMcEX])<br/><br/>
Requirements: [http://code.google.com/p/seek-for-android/wiki/HowToBuildKernel McEX enabled kernel]
<br/><br/>


== Compiling the NativeMcEX Jni Sources ==

The NativeMcEX Jni Sources are available within the subversion source tree (_/trunk/jni/mcex_).
The seek project contains a precompiled version of the shared library that can be used in own projects without the need to compile the sources with the NDK.<br/>
However, if required the sources can be build with the following steps: 
  * Checkout the files with `svn checkout http://seek-for-android.googlecode.com/svn/trunk/jni/mcex`
  * Create an Android NDK project named _mcex_ with the subversion sources
  * run `make APP=mcex`
  * use the compiled `libmcex.so` in your own application
_See the Android NDK documentation for more information how to create and setup and NDK project_
<br/><br/>


== Creating an Android application that uses the SEEK interface ==
In subversion, a _/trunk/samples/SmartcardSample_ example is uploaded that makes use of the SEEK interface.<br/><br/>
Running the sample application:
  * Checkout the eclipse project with `svn checkout http://seek-for-android.googlecode.com/svn/trunk/samples/SmartcardSample`
  * Open the eclipse project, rebuild and deploy the application on the phone with an McEX enabled kernel

Creating a new project:
  * Using eclipse, create a new Android application (Min SDK Verison 3)
  * Copy `android.smartcard.jar` from the subversion _seek_ project into the `libs` folder
  * Copy `libmcex.so` from the subversion _seek_ project into the `libs\armeabi` folder
  * Add the JAR file to the project dependencies
  * Run the application using the new Android smartcard library (SEEK)


== PC/SC subsystem or NativeMcEX? ==
Currently, it is recommended to use the PC/SC subsystem for smartcard access although it will get declared as deprecated (or even removed) over time.
Also, the current _SmartcardSample_ already uses the NativeMcEX interface.<br/>
In order to distinguish the different providers within the source code, use:
{{{
// get the default terminal factory, currently PC/SC
TerminalFactory factory = TerminalFactory.getDefault();

// alternatively, manually specify the PC/SC factory:
TerminalFactory factory = TerminalFactory.getInstance(TerminalFactory.PCSC_TYPE, null);

// or, make use of the experimental NativeMcEX factory:
TerminalFactory factory = TerminalFactory.getInstance(TerminalFactory.NATIVE_TYPE, null);
}}}
When using the PC/SC provider, make sure to have the _libpcsc.so_ library in your project instead of _libmcex.so_ (or both to be safe :)