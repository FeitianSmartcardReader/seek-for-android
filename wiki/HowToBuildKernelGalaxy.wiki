#summary How to build and flash a Mobile Commerce Extension (Mc-EX) enabled kernel for the Samsung Galaxy

= !!! Temporarily unavailable !!! =
== How to build and flash a Mobile Commerce Extension (Mc-EX) enabled kernel for the Samsung Galaxy ==
This description has been tested with a Samsung Galaxy I7500.

=== Get the kernel sources ===
The kernel sources for the Samsung Galaxy can be downloaded
[http://opensource.samsungmobile.com/download/OpenSource/GT-I7500_OpenSource.zip here].
Unpack and prepare the kernel sources as follows:

{{{
unzip <mydownloads>/GT-I7500_OpenSource.zip
cd <mygalaxy>/BSP/kernel_2.6.27
find . -type f -name '*' -exec chmod u+w {} \;
find . -type f -name '*' -exec dos2unix {} \;
}}}

=== Get the kernel configuration file ===
Enter your "`<mygalaxy>/BSP/kernel_2.6.27`" directory and setup the kernel configuration as follows:
{{{
make ARCH=arm CROSS_COMPILE=arm-eabi- defconfig capela_defconfig
}}}

=== Build your own kernel ===
Enter your "`<mygalaxy>/BSP/kernel_2.6.27`" directory and build the kernel as follows:
{{{
make ARCH=arm CROSS_COMPILE=arm-eabi-
}}}

=== Download and apply the Mc-EX patch ===
Apply the Mc-EX patch and rebuilt the kernel as described above. A short description on how to apply the patch can be found inside the [http://seek-for-android.googlecode.com/files/20091023_mcexdrv.tar.bz2 archive].



=== Build your own initrd ===
Get the prebuilt kernel and initrd of your device using a nandroid enabled recovery image after creating a device backup(_/sdcard/nandroid/.../boot.img_). The Internet contains a lot of information on how to do this.
Get [http://android-serialport-api.googlecode.com/files/getramdisk.py this] script and extract the contents of the prebuilt initrd as follows:
{{{
cd <mygalaxy>
<mydownloads>/getramdisk.py <mydownloads>/boot.img
mkdir <mygalaxy>/initrd
cd <mygalaxy>/initrd
gunzip < <mygalaxy>/ramdisk.img | cpio --extract --preserve --verbose

}}}

Download, patch and build the Android system as described [http://code.google.com/p/seek-for-android/wiki/HowToBuildKernel here].

Add the following lines to your "`<mydroid>/system/core/init/init.c`" file and rebuild your Android system:
{{{
...
mount("sysfs", "/sys", "sysfs", 0, NULL);
}}}
{{{
mknod("/dev/dpramerr", S_IFCHR | 0600, (255 << 8) | 0);  // added for samsung galaxy
mknod("/dev/dpram0", S_IFCHR | 0600, (255 << 8) | 1);    // added for samsung galaxy
mknod("/dev/dpram1", S_IFCHR | 0600, (255 << 8) | 2);    // added for samsung galaxy
}}}
{{{
/* We must have some place other than / to create the
...
}}}

Enter your "`<mygalaxy>/initrd`" directory, replace the Android init and build your own boot.img as follows:
{{{
cp <mydroid>/out/target/product/dream-open/root/init init
find . | cpio --create --'format=newc' | gzip > <mygalaxy>/initrd.img
chmod u+x <mygalaxy>/BSP/scripts/Zbuild
<mygalaxy>/BSP/scripts/Zbuild <mygalaxy>/boot.img <mygalaxy>/BSP/kernel_2.6.27/arch/arm/boot/zImage <mygalaxy>/initrd.img
}}}

=== Flash your own kernel ===
*Backup the Android system of your device before you do this last step.*
{{{
fastboot flash boot <mygalaxy>/boot.img
}}}