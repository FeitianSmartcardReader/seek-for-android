#summary Installable MSC_SmartcardService for Android phones that are not flashed

= Introduction =

Flashing the system is not supported on every device, thus using the !SmartCard API is limited to development phone only.<br/>
However, access to Secure Elements does not always require flashing the system image. Also, application developers can use the !SmartcardService as a quick way to develop their applications as well as end users who just want to use an application with smart card support.<br/>
_MSC !SmartcardService_ enables (any) Android phone with SD card slot to use !SmartCard API without flashing the system or rooting the phone.<br/>
The _APK_ inside the archive can be installed on the device like on any other Android application. Devices that already have the !SmartCard API integrated in the system do not support the _MSC !SmartcardService_, please install the _MSC !PluginTerminal_ instead.
<br/>
*Note*<br>
 * The _MSC !SmartcardService_ will only support the [https://www.cardsolutions-shop.com/shop/gi-de/ G&D Mobile Security Card]
 * The source code of _MSC !SmartcardService_ is equal to the !SmartCard API from SVN with the exception of `libmsc.so` which will not be provided Open Source.  
<br/>

<table>
<tr>
<td valign="top" width=55%>
= Details =
To test the _MSC !SmartcardService_
 * download the [http://seek-for-android.googlecode.com/files/MSC_SmartcardService-2_4_0.tgz MSC_SmartcardService-2_4_0.tgz] and extract the card content

 * ensure that _USB debugging_ is enabled on the phone<br/>(_Settings_ - _Applications_ - _Development_ - _USB debugging_)

 * execute `adb install MSC_SmartcardService.apk`

 * execute `adb install OpenMobileAPISample.apk`

 * ensure a [https://www.cardsolutions-shop.com/shop/gi-de/ Mobile Security Card] is inserted in the phone

 * on the phone, run the OpenMobileAPISample application and see the log output

 * in addition, the [http://seek-for-android.googlecode.com/files/PerformanceTester-1_3_0.tgz PerformanceTester] application can be used to run more detailed tests

</td>
<td width=5%>
</td>
<td width=40%>
<img src=http://seek-for-android.googlecode.com/svn/wiki/img/MscSmartcardService_screenshot.png width=250/>
</td>
</tr>
</table>

= Development =
The _MSC !SmartcardService_ provides the *same* interface as the !SmartCard API so application developers can write and test their applications with the installable version and have no migration issues later on<br/>
When using Eclipse to develop Secure Element applications, setup the development environment as normal as refer to [UsingSmartCardAPI Using the SmartCard API]. However, do not use the SDK Addon Package but the default Google SDK. When creating a project, add the `org.simalliance.openmobileapi.jar` file to the build path of the project in the same way as !SmartCard API applications do.

[http://seek-for-android.googlecode.com/svn/wiki/img/MscSmartcardService_eclipse.png]
<br/><br/>

_todo_... Update development howto, describe !PluginTerminal and S3 issues, explain ICS issues with external storage, link to Access Control (!AllowAll)<br/>

= Version history =
==== v2.4.0 - 19.07.2012 ====
 * !SmartCard API 2.4.0 feature compliant (Global Platform Access Control integrated)
 * ICS support
 * !MscTerminal & libmsc.so extensions by G&D SFS
   * better mount point detection 
   * APDU buffer size limited to protect potential buffer overflow
   * Keep-alive thread integrated
   * removal of communication file after session gets closed

==== v2.3.0 - 06.12.2011 ====
 * Compliant to the SIMalliance Open Mobile API Specification V2.02 (transport layer only)
 * The namespace "android.smartcard" was completely removed
 * Access Control was completely removed

==== v2.2.2 - 21.10.2011 ====
 * Compliant to the latest SIMalliance Open Mobile API Specification (V1.01)
 * Support for !PluginTerminals
 * Speed enhancement with file access
 * Improved recognition of SD card mount point
 * Changed permission name according to Open Mobile API

==== v2.1.1 - 15.04.2011 ====
 * Major update: integration of SIMalliance Open Mobile API interface
 * Bug fix: improved retry-loop to receive response with some MSC cards

==== v1.5 - 11.11.2010 ====
 * Bug fix: 'response too small' with some MSC cards
 * Bug fix: JNI library cleanup
 * Corrections for Samsung Galaxy S

==== v1.4 - 02.11.2010 ====
 * Aligned _ISmartcardService_ interface to !SmartCard API
 * Detection of MSC card versus standard SD card
 * Detection of mount path
 * APDU command and response size fix (for APDUs with more than 250 data bytes)
 * simplified JNI interface
 * Sample application & android.smartcard.jar in download file

==== v1.0 - v1.3 ====
 * no public release of the first implementations